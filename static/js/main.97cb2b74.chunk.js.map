{"version":3,"sources":["List.jsx","Buttons.jsx","App.js","index.js"],"names":["List","goods","map","good","key","Buttons","reverseList","sortAlphabetically","initialList","sortByLength","selectValue","changeValue","selectItems","reset","type","onClick","value","onChange","Array","keys","elem","goodsFromServer","App","state","showGoods","addList","setState","reverse","sort","good1","good2","length","event","target","filter","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAaeA,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,QC0CME,EA9CC,SAAC,GAAD,IACdC,EADc,EACdA,YACAC,EAFc,EAEdA,mBACAC,EAHc,EAGdA,YACAC,EAJc,EAIdA,aACAC,EALc,EAKdA,YACAC,EANc,EAMdA,YACAC,EAPc,EAOdA,YACAC,EARc,EAQdA,MARc,OAUd,oCACE,4BAAQC,KAAK,SAASC,QAAST,GAA/B,WAIA,4BAAQQ,KAAK,SAASC,QAASR,GAA/B,uBAIA,4BAAQO,KAAK,SAASC,QAASP,GAA/B,gBAIA,4BAAQM,KAAK,SAASC,QAASN,GAA/B,kBAIA,4BACEO,MAAON,EACPO,SAAUN,GAGT,YAAI,IAAIO,MAAMN,GAAaO,QAAQjB,KAAI,SAAAkB,GAAI,OAC1C,4BAAQhB,IAAKgB,EAAMJ,MAAOI,EAAO,GAC9BA,EAAO,OAMd,4BAAQN,KAAK,SAASC,QAASF,GAA/B,WCrCEQ,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAiGaC,E,4MA7FbC,MAAQ,CACNtB,MAAOoB,EACPX,YAAa,IACbE,YAAa,GACbY,WAAW,G,EAGbC,QAAU,WACR,EAAKC,SAAS,CACZF,WAAW,K,EAIflB,YAAc,WACZ,EAAKoB,UAAS,SAAAH,GAAK,MAAK,CACtBtB,MAAO,YAAIsB,EAAMtB,OAAO0B,e,EAI5BpB,mBAAqB,WACnB,EAAKmB,UAAS,SAAAH,GAAK,MAAK,CACtBtB,MAAO,YAAIsB,EAAMtB,OAAO2B,Y,EAI5BpB,YAAc,WACZ,EAAKkB,SAAS,CACZzB,MAAM,GAAD,OAAMoB,GACXX,YAAa,O,EAIjBD,aAAe,WACb,EAAKiB,UAAS,SAAAH,GAAK,MAAK,CACtBtB,MAAO,YACFsB,EAAMtB,OACT2B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,e,EAIlDpB,YAAc,SAACqB,GACb,EAAKN,SAAS,CACZhB,YAAasB,EAAMC,OAAOjB,MAC1Bf,MAAOoB,EAAgBa,QACrB,SAAA/B,GAAI,OAAIA,EAAK4B,SAAWC,EAAMC,OAAOjB,Y,EAK3CH,MAAQ,WACN,EAAKa,SAAS,CACZhB,YAAa,IACbT,MAAOoB,K,uDAID,IAAD,EACgDc,KAAKZ,MAApDtB,EADD,EACCA,MAAOS,EADR,EACQA,YAAac,EADrB,EACqBA,UAAWZ,EADhC,EACgCA,YAEvC,OACE,yBAAKwB,UAAU,OACb,qCAECZ,GAEG,4BAAQV,KAAK,SAASC,QAASoB,KAAKV,SAApC,UAMFD,GAEE,oCACE,kBAAC,EAAD,CAAMvB,MAAOA,IACb,kBAAC,EAAD,CACES,YAAaA,EACbE,YAAaA,EACbN,YAAa6B,KAAK7B,YAClBC,mBAAoB4B,KAAK5B,mBACzBC,YAAa2B,KAAK3B,YAClBC,aAAc0B,KAAK1B,aACnBE,YAAawB,KAAKxB,YAClBE,MAAOsB,KAAKtB,c,GApFVwB,IAAMC,WCfxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.97cb2b74.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst List = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport default List;\n\nList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({\n  reverseList,\n  sortAlphabetically,\n  initialList,\n  sortByLength,\n  selectValue,\n  changeValue,\n  selectItems,\n  reset,\n}) => (\n  <>\n    <button type=\"button\" onClick={reverseList}>\n      Reverse\n    </button>\n\n    <button type=\"button\" onClick={sortAlphabetically}>\n      Sort alphabetically\n    </button>\n\n    <button type=\"button\" onClick={initialList}>\n      Initial list\n    </button>\n\n    <button type=\"button\" onClick={sortByLength}>\n      Sort by length\n    </button>\n\n    <select\n      value={selectValue}\n      onChange={changeValue}\n    >\n\n      {[...new Array(selectItems).keys()].map(elem => (\n        <option key={elem} value={elem + 1}>\n          {elem + 1}\n        </option>\n      ))}\n\n    </select>\n\n    <button type=\"button\" onClick={reset}>\n      Reset\n    </button>\n  </>\n);\n\nexport default Buttons;\n\nButtons.propTypes = {\n  reverseList: PropTypes.func.isRequired,\n  sortAlphabetically: PropTypes.func.isRequired,\n  initialList: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  changeValue: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  selectValue: PropTypes.string.isRequired,\n  selectItems: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport List from './List';\nimport Buttons from './Buttons';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    selectValue: '1',\n    selectItems: 10,\n    showGoods: true,\n  };\n\n  addList = () => {\n    this.setState({\n      showGoods: false,\n    });\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort(),\n    }));\n  }\n\n  initialList = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      selectValue: '1',\n    });\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [\n        ...state.goods,\n      ].sort((good1, good2) => good1.length - good2.length),\n    }));\n  }\n\n  changeValue = (event) => {\n    this.setState({\n      selectValue: event.target.value,\n      goods: goodsFromServer.filter(\n        good => good.length >= +event.target.value,\n      ),\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      selectValue: '1',\n      goods: goodsFromServer,\n    });\n  }\n\n  render() {\n    const { goods, selectValue, showGoods, selectItems } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n\n        {showGoods\n          && (\n            <button type=\"button\" onClick={this.addList}>\n              Start\n            </button>\n          )\n        }\n\n        {!showGoods\n          && (\n            <>\n              <List goods={goods} />\n              <Buttons\n                selectValue={selectValue}\n                selectItems={selectItems}\n                reverseList={this.reverseList}\n                sortAlphabetically={this.sortAlphabetically}\n                initialList={this.initialList}\n                sortByLength={this.sortByLength}\n                changeValue={this.changeValue}\n                reset={this.reset}\n              />\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}